{:loc [10 5],
 :dir 1.5707963267948966,
 :soundtrack ["Music/16 - Japan Tsunami Fundraiser - ambient_samurai-Senses_Planned_For_Oblivion.ogg"]
 :walls
 #{[5 4] [7 6] [8 7] [11 10] [25 24] [28 27] [3 3] [11 11] [22 22]
   [23 23] [28 28] [30 30] [3 4] [10 11] [23 24] [27 28] [29 30] [3 5]
   [9 11] [23 25] [24 26] [25 27] [26 28] [27 29] [3 6] [4 7] [5 8]
   [7 10] [8 11] [27 30] [28 31] [5 9] [6 10] [7 11] [5 10] [26 3]
   [27 4] [25 3] [27 5] [24 3] [27 6] [25 5] [27 7] [23 4] [25 6]
   [27 8] [23 5] [25 7] [27 9] [22 5] [24 7] [21 5] [23 7] [26 10]
   [20 5] [22 7] [18 4] [19 5] [21 7] [22 8] [25 11] [27 13] [28 14]
   [17 4] [20 7] [21 8] [26 13] [28 15] [29 16] [16 4] [21 9] [24 12]
   [25 13] [27 15] [29 17] [15 4] [19 8] [21 10] [24 13] [29 18] [11 1]
   [14 4] [18 8] [21 11] [22 12] [28 18] [10 1] [11 2] [13 4] [17 8]
   [22 13] [24 15] [27 18] [9 1] [11 3] [12 4] [13 5] [22 14] [23 15]
   [27 19] [8 1] [11 4] [16 9] [23 16] [25 18] [27 20] [7 1] [9 3]
   [11 5] [13 7] [14 8] [23 17] [24 18] [25 19] [27 21] [31 25] [6 1]
   [8 3] [9 4] [13 8] [15 10] [23 18] [27 22] [30 25] [31 26] [5 1]
   [7 3] [9 5] [10 6] [11 7] [12 8] [14 10] [24 20] [26 22] [28 24]
   [29 25] [31 27] [6 3] [10 7] [11 8] [13 10] [27 24] [28 25] [31 28]
   [4 2] [6 4] [7 5] [9 7] [12 10] [23 21] [25 23] [26 24] [29 27]
   [31 29]},
 :wall-mat "Textures/lumber.png",
 :widgets
 [{:name :text-screen,
   :answers
   {:direction -1.549432056466805,
    :protocol :none,
    :text
    "POGGIO INSTITUTE\n================\n\nTO OUR GUEST:\n\nWE HOPE YOU ENJOY THIS OPPORTUNITY TO RELAX AND REFLECT. \n\nTO OUR EMPLOYEES:\n\nSHHHHHHH. QUIET TIME. I MEAN IT.",
    :parameter "message",
    :text-color {:red 127, :green 255, :blue 0},
    :z 2,
    :x 10,
    :success-text "",
    :font-size 0.6,
    :transform "(function [x] x)",
    :end-level? false,
    :success? "",
    :error-text "",
    :docstring "",
    :distance 40,
    :id "",
    :target-ids []}}
  {:name :text-screen,
   :answers
   {:direction -1.5911187318659021,
    :protocol :none,
    :text
    "POGGIO INSTITUTE\n================\n\nHEY SPENCER, I MADE A POEM.\n\nTHINGS AROUND HERE ARE FUNKY.\nAN ENTIRE FACILITY FOR A PET MONKEY?\nTHE BOSS IS REAL MEAN.\nTHE WALLS ARE GREEN.\nP.S. DO YOU THINK I'M GETTING CHUNKY?\n",
    :parameter "message",
    :text-color {:red 51, :green 153, :blue 255},
    :z 4,
    :x 24,
    :success-text "",
    :font-size 0.6,
    :transform "(function [x] x)",
    :end-level? false,
    :success? "",
    :error-text "",
    :docstring "",
    :distance 40,
    :id "",
    :target-ids []}}
  {:name :text-screen,
   :answers
   {:direction -3.106974454634032,
    :protocol :none,
    :text "XD\n\n\nyes.",
    :parameter "message",
    :text-color {:red 51, :green 153, :blue 255},
    :z 4,
    :x 26,
    :success-text "",
    :font-size 2.0,
    :transform "(function [x] x)",
    :end-level? false,
    :success? "",
    :error-text "",
    :docstring "",
    :distance 40,
    :id "",
    :target-ids []}}
  {:name :globule-receiver,
   :answers
   {:z 5,
    :x 15,
    :id "Hoop Tres",
    :direction -1.5146055405936596,
    :y 1,
    :target-ids ["Door Tres"],
    :protocol :open-on-pattern,
    :pattern ["red" "red" "red"]}}
  {:name :globule-receiver,
   :answers
   {:z 5,
    :x 16,
    :id "Hoop Quattuor",
    :direction -1.5146055405936596,
    :y 1,
    :target-ids ["Door Quattuor"],
    :protocol :open-on-pattern,
    :pattern ["green" "green" "green"]}}
  {:name :globule-receiver,
   :answers
   {:z 5,
    :x 17,
    :id "Hoop Quinque",
    :direction -1.5146055405936596,
    :y 1,
    :target-ids ["Door Quinque"],
    :protocol :open-on-pattern,
    :pattern ["green"]}}
  {:name :text-screen,
   :answers
   {:direction 3.135202964193077,
    :protocol :none,
    :text
    "POGGIO INSTITUTE\n================\n\nTHE DOORS OPEN WHEN:\n\nTHE FIRST HOOP RECEIVES red, red, AND red\n\nTHE SECOND HOOP RECEIVES green, green, AND green.\n\nTHE THIRD HOOP RECEIVES green.\n",
    :parameter "message",
    :text-color {:red 127, :green 255, :blue 0},
    :z 5,
    :x 18,
    :success-text "",
    :font-size 0.6,
    :transform "(function [x] x)",
    :end-level? false,
    :success? "",
    :error-text "",
    :docstring "",
    :distance 40,
    :id "",
    :target-ids []}}
  {:name :cellular-automaton,
   :answers
   {:direction 1.5852880658603967,
    :protocol :rule,
    :z 6,
    :init-id "",
    :x 4,
    :precompute? true,
    :rule-id "",
    :target-id "",
    :row-id "",
    :pair-id "",
    :generations-id "",
    :id "",
    :rule
    "(function [left old right] \n  (and (any? id [left old right])\n           (any? not [left old right])))\n"}}
  {:name :cellular-automaton,
   :answers
   {:direction -0.0,
    :protocol :rule,
    :z 6,
    :init-id "",
    :x 11,
    :precompute? true,
    :rule-id "",
    :target-id "",
    :row-id "",
    :pair-id "",
    :generations-id "",
    :id "",
    :rule
    "(function [left old right] \n   (and (not left) (not old)))"}}
  {:name :model,
   :answers
   {:z-delta 0.0,
    :direction 3.1016139664665032,
    :model-name "Models/Penguin/Pingouin-NEW.scene",
    :z 6,
    :x 12,
    :y-delta 0.0,
    :x-delta 0.0,
    :id "",
    :collidable? false}}
  {:name :glass-door,
   :answers
   {:z 6,
    :x 13,
    :id "",
    :direction -0.03224688243525392,
    :distance 0.0,
    :movement :up,
    :speed 0.0,
    :time 0.0}}
  {:name :glass-door,
   :answers
   {:z 6,
    :x 20,
    :id "Door Tres",
    :direction 3.115624466378237,
    :distance 8.0,
    :movement :left,
    :speed 2.0,
    :time 3.0}}
  {:name :glass-door,
   :answers
   {:z 6,
    :x 21,
    :id "Door Quattuor",
    :direction 3.115624466378237,
    :distance 8.0,
    :movement :right,
    :speed 2.0,
    :time 3.0}}
  {:name :glass-door,
   :answers
   {:z 6,
    :x 22,
    :id "Door Quinque",
    :direction 3.115624466378237,
    :distance 8.0,
    :movement :down,
    :speed 2.0,
    :time 3.0}}
  {:name :text-screen,
   :answers
   {:direction -3.141592653589793,
    :protocol :none,
    :text
    "POGGIO INSTITUTE\n================\n\nTRUTH IS REPRESENTED WITH BOOLEANS.\n\nAND UNLIKE IN REAL LIFE, TRUTH IS ALWAYS EITHER true OR false.",
    :parameter "message",
    :text-color {:red 127, :green 255, :blue 0},
    :z 7,
    :x 7,
    :success-text "",
    :font-size 0.6,
    :split? false,
    :transform "(function [x] x)",
    :end-level? false,
    :success? "",
    :error-text "",
    :docstring "",
    :distance 40,
    :id "",
    :target-ids []}}
  {:name :function-cannon,
   :answers
   {:direction 1.5707963267948966,
    :init-queue "(cycle [2 4 6])",
    :constraint "",
    :z 7,
    :velocity 75,
    :x 15,
    :transform-id "Transformer Tres",
    :mass 0.5,
    :queue? true,
    :distance 24,
    :id "Cannon Tres"}}
  {:name :function-cannon,
   :answers
   {:direction 1.5707963267948966,
    :init-queue "(cycle [1 3 5])",
    :constraint "",
    :z 7,
    :velocity 75,
    :x 16,
    :transform-id "Transformer Tres",
    :mass 0.5,
    :queue? true,
    :distance 24,
    :id "Cannon Quattuor"}}
  {:name :function-cannon,
   :answers
   {:direction 1.5707963267948966,
    :init-queue "(repeat 0)",
    :constraint "",
    :z 7,
    :velocity 75,
    :x 17,
    :transform-id "Transformer Tres",
    :mass 0.5,
    :queue? true,
    :distance 24,
    :id "Cannon Quinque"}}
  {:name :text-screen,
   :answers
   {:direction -3.1242783666664065,
    :protocol :hold,
    :text
    "POGGIO INSTITUTE\n================\n\nSEND A FUNCTION THAT\n\nMAKES THE FIRST CANNON SPIT red\n\nMAKES THE SECOND CANNON SPIT green\n\nMAKES THE THIRD CANNON SPIT green.\n\n(equal?, even?, AND odd? may be helpful)\n",
    :parameter "fn",
    :text-color {:red 127, :green 255, :blue 0},
    :z 7,
    :x 19,
    :success-text "",
    :font-size 0.6,
    :transform "id",
    :end-level? false,
    :success? "",
    :error-text "",
    :docstring
    "Takes: A 1-argument function called fn.\nReturns: Modifies what the cannons spit using fn.",
    :distance 40,
    :id "Transformer Tres",
    :target-ids []}}
  {:name :function-cannon,
   :answers
   {:direction -0.012499349019361679,
    :init-queue "(repeat true)",
    :constraint "",
    :z 8,
    :velocity 75,
    :x 8,
    :transform-id "Transformer Unus",
    :mass 0.5,
    :queue? true,
    :distance 24,
    :id "Cannon Unus"}}
  {:name :text-screen,
   :answers
   {:direction -1.5605925993009424,
    :protocol :none,
    :text
    "POGGIO INSTITUTE\n================\n\nTHE FIRST CANNON SPITS true\n\nTHE SECOND CANNON SPITS false",
    :parameter "message",
    :text-color {:red 127, :green 255, :blue 0},
    :z 8,
    :x 9,
    :success-text "",
    :font-size 0.6,
    :transform "(function [x] x)",
    :end-level? false,
    :success? "",
    :error-text "",
    :docstring "",
    :distance 40,
    :id "",
    :target-ids []}}
  {:name :globule-receiver,
   :answers
   {:z 8,
    :x 10,
    :id "Hoop Unus",
    :direction -3.133294088905124,
    :y 1,
    :target-ids ["Door Unus"],
    :protocol :open-on-pattern,
    :pattern ["color 0 0 0"]}}
  {:name :text-screen,
   :answers
   {:direction -3.1020093796526966,
    :protocol :none,
    :text
    "POGGIO INSTITUTE\n================\n\nFIRST CANNON SPITS OUT 2, 4, AND 6\n\nSECOND CANNON SPITS OUT 1, 3, AND 5\n\nTHIRD CANNON SPITS OUT 0",
    :parameter "message",
    :text-color {:red 127, :green 255, :blue 0},
    :z 8,
    :x 16,
    :success-text "",
    :font-size 0.6,
    :transform "(function [x] x)",
    :end-level? false,
    :success? "",
    :error-text "",
    :docstring "",
    :distance 40,
    :id "",
    :target-ids []}}
  {:name :text-screen,
   :answers
   {:direction 1.5707963267948966,
    :protocol :none,
    :text
    "POGGIO INSTITUTE\n================\n\nTHE if FUNCTION LETS YOU RETURN DIFFERENT THINGS DEPENDING ON A BOOLEAN.\n\nIT TAKES A CONDITION AND TWO VALUES.\n\nIF THE CONDITION IS true, IT RETURNS THE FIRST VALUE.\nIF THE CONDITION IS false, IT RETURNS THE SECOND VALUE.\n\nEXAMPLE:\n(if (equal? 1 2)\n  0\n  1)\n\nWILL RETURN 1, AS (equal? 1 2) IS false.",
    :parameter "message", :text-color {:red 127, :green 255, :blue 0},
    :z 9,
    :x 6,
    :success-text "",
    :font-size 0.6,
    :split? false,
    :transform "(function [x] x)",
    :end-level? false,
    :success? "",
    :error-text "",
    :docstring "",
    :distance 40,
    :id "Help Menu ",
    :target-ids []}}
  {:name :text-screen,
   :answers
   {:direction 1.5707963267948966,
    :protocol :hold,
    :text
    "POGGIO INSTITUTE\n================\n\nSEND A FUNCTION THAT:\n\nMAKES THE FIRST CANNON SPIT BLACK\n(color 0 0 0)\n\nMAKES THE SECOND CANNON SPIT WHITE\n(color 255 255 255)",
    :parameter "message",
    :text-color {:red 127, :green 255, :blue 0},
    :z 9,
    :x 7,
    :success-text "",
    :font-size 0.6,
    :split? false,
    :transform "id",
    :end-level? false,
    :success? "",
    :error-text "",
    :docstring "",
    :distance 40,
    :id "Transformer Unus",
    :target-ids []}}
  {:name :glass-door,
   :answers
   {:z 9,
    :x 11,
    :id "Door Unus",
    :direction -3.100798970721928,
    :distance 8.0,
    :movement :right,
    :speed 2.0,
    :time 3.0}}
  {:name :glass-door,
   :answers
   {:z 9,
    :x 12,
    :id "Door Duo",
    :direction -2.999695598985629,
    :distance 8.0,
    :movement :right,
    :speed 2.0,
    :time 3.0}}
  {:name :text-screen,
   :answers
   {:direction 3.1336246947282715,
    :protocol :menus,
    :text
    "POGGIO INSTITUTE\n================\n\nSEND THE NUMBER OF THE CHOICE YOU WANT TO VIEW",
    :parameter "message",
    :text-color {:red 127, :green 255, :blue 0},
    :z 9,
    :x 15,
    :success-text "",
    :font-size 0.6,
    :split? false,
    :transform
    "{:start 0,\n 0\n {:label\n  \"THE FOLLOWING FUNCTIONS CAN BUILD NEW BOOLEANS OUT OF OLD ONES\",\n  :states\n  [{:state 1, :label \"not\"}\n   {:state 2, :label \"and\"}\n   {:state 3, :label \"or\"}]},\n 1\n {:label\n  \"not\\n\\nRETURNS THE OPPOSITE OF A BOOLEAN.\\n\\n(not true) RETURNS false.\",\n  :states [{:state 0, :label \"Go Back\"}]},\n 2\n {:label\n  \"and\\n\\nGIVEN TWO BOOLEANS, b1 AND b2:\\n\\n(and b1 b2) RETURNS TRUE ONLY IF BOTH ARE true.\",\n  :states [{:state 0, :label \"Go Back\"}]},\n 3\n {:label\n  \"or\\n\\nGIVEN TWO BOOLEANS, b1 AND b2:\\n\\n(or b1 b2) RETURNS TRUE IF EITHER OR BOTH ARE true.\",\n  :states [{:state 0, :label \"Go Back\"}]}}\n",
    :end-level? false,
    :success? "",
    :error-text "",
    :docstring "",
    :distance 40,
    :id "Help Menu Booleans",
    :target-ids []}}
  {:name :text-screen,
   :answers
   {:direction 1.694747770112556,
    :protocol :menus,
    :text
    "POGGIO INSTITUTE\n================\n\nSEND THE NUMBER OF THE CHOICE YOU WANT TO VIEW",
    :parameter "message",
    :text-color {:red 127, :green 255, :blue 0},
    :z 9,
    :x 26,
    :success-text "",
    :font-size 0.6,
    :split? false,
    :transform
    "{:start 0,\n 0\n {:label\n  \"THE FOLLOWING FUNCTIONS CAN RUN TESTS ON LISTS\",\n  :states\n  [{:state 1, :label \"any?\"}\n   {:state 2, :label \"all?\"}\n   {:state 3, :label \"one?\"}]},\n 1\n {:label\n  \"any?\\n\\nRETURNS true IF ONE ELEMENT IN A LIST PASSES A TEST.\\n\\n(any? not [false]) RETURNS true.\",\n  :states [{:state 0, :label \"Go Back\"}]},\n 2\n {:label\n  \"all?\\n\\nRETURNS true IF ALL ELEMENTS IN A LIST PASSES A TEST.\\n\\n(all? id [true false true]) RETURNS false.\",\n  :states [{:state 0, :label \"Go Back\"}]},\n 3\n {:label\n  \"one?\\n\\n RETURNS true IF EXACTLY ONE ELEMENT IN A LIST PASSES A TEST.\\n\\n(one? id [true false false]) RETURNS true.\",\n  :states [{:state 0, :label \"Go Back\"}]}}\n",
    :end-level? false,
    :success? "",
    :error-text "",
    :docstring "",
    :distance 40,
    :id "Help Menu List Booleans",
    :target-ids []}}
  {:name :function-cannon,
   :answers
   {:direction -0.008928334179836715,
    :init-queue "(repeat false)",
    :constraint "",
    :z 10,
    :velocity 75,
    :x 8,
    :transform-id "Transformer Unus",
    :mass 0.5,
    :queue? true,
    :distance 24,
    :id "Cannon Duo"}}
  {:name :globule-receiver,
   :answers
   {:z 10,
    :x 10,
    :id "Hoop Duo",
    :direction -3.133294088905124,
    :y 1,
    :target-ids ["Door Duo"],
    :protocol :open-on-pattern,
    :pattern ["color 255 255 255"]}}
  {:name :text-screen,
   :answers
   {:direction 1.5707963267948966,
    :protocol :pass,
    :text
    "POGGIO INSTITUTE\n================\n\nSEND A 3-ARGUMENT FUNCTION THAT MAKES THE FIRST WALL LOOK LIKE THE SECOND WALL.\n\nFOR A GIVEN CURRENT CELL cur AND THE NEIGHBORS ABOVE IT:\n\n[left] [old] [right]\n       [cur]\n\nleft, old, AND right ARE EITHER true OR false, AND cur is determined by:\n\n(rule left old right)\n\nTRY:\n(function [left old right]\n  (any? id [left old right]))",
    :parameter "rule",
    :text-color {:red 127, :green 255, :blue 0},
    :z 10,
    :x 25,
    :success-text "",
    :font-size 0.6,
    :split? false,
    :transform "(function [x] x)",
    :end-level? false,
    :success? "",
    :error-text "",
    :docstring
    "Takes: A 3-argument function rule.\nReturns: Populates the cells using rule.",
    :distance 40,
    :id "Cells Six Ruler",
    :target-ids ["Cells Six"]}}
  {:name :cellular-automaton,
   :answers
   {:direction 1.5707963267948966,
    :protocol :all-transform,
    :z 11,
    :init-id "",
    :x 22,
    :precompute? true,
    :rule-id "",
    :target-id "",
    :row-id "",
    :pair-id "",
    :generations-id "",
    :id "Cells Six Example",
    :rule "(function [left old right] \n   (not old))"}}
  {:name :cellular-automaton,
   :answers
   {:direction 1.5707963267948966,
    :protocol :rule,
    :z 11,
    :init-id "",
    :x 24,
    :precompute? false,
    :rule-id "",
    :target-id "Door Six",
    :row-id "",
    :pair-id "Cells Six Example",
    :generations-id "",
    :id "Cells Six",
    :rule "(function [left old right] \n   (not old))"}}
  {:name :glass-door,
   :answers
   {:z 12,
    :x 23,
    :id "Door Six",
    :direction 1.5707963267948966,
    :distance 8.0,
    :movement :up,
    :speed 3.0,
    :time 0.0}}
  {:name :text-screen,
   :answers
   {:direction -3.098329622182526,
    :protocol :pass,
    :text
    "POGGIO INSTITUTE\n================\nSEND A FUNCTION TO MAKE THE FIRST CELL WALL MATCH THE SECOND.\n",
    :parameter "rule",
    :text-color {:red 127, :green 255, :blue 0},
    :z 15,
    :x 26,
    :success-text "",
    :font-size 0.6,
    :transform "(function [x] x)",
    :end-level? false,
    :success? "",
    :error-text "",
    :docstring
    "Takes: A 3-argument function rule.\nReturns: Populates the cells using rule.",
    :distance 40,
    :id "Cell Septem Ruler",
    :target-ids ["Cells Septem"]}}
  {:name :cellular-automaton,
   :answers
   {:direction 1.5707963267948966,
    :protocol :all-transform,
    :z 17,
    :init-id "",
    :x 25,
    :precompute? true,
    :rule-id "",
    :target-id "",
    :row-id "",
    :pair-id "",
    :generations-id "",
    :id "Cells Septem Example",
    :rule "(function [left old right] \n   (or left right))"}}
  {:name :cellular-automaton,
   :answers
   {:direction 1.5707963267948966,
    :protocol :rule,
    :z 17,
    :init-id "",
    :x 27,
    :precompute? false,
    :rule-id "",
    :target-id "Door Septem",
    :row-id "",
    :pair-id "Cells Septem Example",
    :generations-id "",
    :id "Cells Septem",
    :rule "(function [left old right] \n   (not old))"}}
  {:name :glass-door,
   :answers
   {:z 18,
    :x 26,
    :id "Door Septem",
    :direction 1.5707963267948966,
    :distance 8.0,
    :movement :up,
    :speed 3.0,
    :time 0.0}}
  {:name :text-screen,
   :answers
   {:direction 1.5707963267948966,
    :protocol :pass,
    :text
    "POGGIO INSTITUTE\n================\n\nSEND A FUNCTION THAT MAKES THE FIRST CELL WALL LOOK LIKE THE SECOND.",
    :parameter "rule",
    :text-color {:red 127, :green 255, :blue 0},
    :z 21,
    :x 26,
    :success-text "",
    :font-size 0.6,
    :transform "(function [x] x)",
    :end-level? false,
    :success? "",
    :error-text "",
    :docstring
    "Takes: a 3-argument function called rule.\nReturns: Populates the cell wall using rule.",
    :distance 40,
    :id "Cells Octo Ruler",
    :target-ids ["Cells Octo"]}}
  {:name :cellular-automaton,
   :answers
   {:direction 1.5707963267948966,
    :protocol :all-transform,
    :z 22,
    :init-id "",
    :x 23,
    :precompute? true,
    :rule-id "",
    :target-id "",
    :row-id "",
    :pair-id "",
    :generations-id "",
    :id "Cells Octo Example",
    :rule
    "(function [left old right] \n  (and (any? id [left old right])\n           (any? not [left old right])))"}}
  {:name :cellular-automaton,
   :answers
   {:direction 1.5707963267948966,
    :protocol :rule,
    :z 22,
    :init-id "",
    :x 25,
    :precompute? false,
    :rule-id "",
    :target-id "Door Octo",
    :row-id "",
    :pair-id "Cells Octo Example",
    :generations-id "",
    :id "Cells Octo",
    :rule "(function [left old right] \n   (not old))"}}
  {:name :glass-door,
   :answers
   {:z 23,
    :x 24,
    :id "Door Octo",
    :direction 1.5707963267948966,
    :distance 8.0,
    :movement :up,
    :speed 3.0,
    :time 0.0}}
  {:name :text-screen,
   :answers
   {:direction 1.5707963267948966,
    :protocol :none,
    :text
    "POGGIO INSTITUTE\n================\n\nNOW THAT YOU KNOW HOW \"TRUTH\" WORKS, TAKE SOME TIME TO REFLECT ON THESE DEEP MEDITATIONS.\n\nTHEN PROCEED TO TAKE YOUR 'TUSHY' TO THE NEXT PHASE.",
    :parameter "message",
    :text-color {:red 127, :green 255, :blue 0},
    :z 25,
    :x 24,
    :success-text "",
    :font-size 0.6,
    :transform "(function [x] x)",
    :end-level? false,
    :success? "",
    :error-text "",
    :docstring "",
    :distance 40,
    :id "",
    :target-ids []}}
  {:name :text-screen,
   :answers
   {:direction -3.1227269675681226,
    :protocol :open,
    :text "POGGIO INSTITUTE\n================\nSEND true TO EXIT.",
    :parameter "message",
    :text-color {:red 127, :green 255, :blue 0},
    :z 25,
    :x 27,
    :success-text "\nGOOD BYE.",
    :font-size 0.6,
    :split? false,
    :transform "(function [x] x)",
    :end-level? true,
    :success? "message",
    :error-text "Just send true!",
    :docstring
    "Takes: a boolean called message.\nReturns: Opens the exit when message is true.",
    :distance 40,
    :id "",
    :target-ids ["Exit Door"]}}
  {:name :glass-door,
   :answers
   {:z 26,
    :x 28,
    :id "Exit Door",
    :direction 2.9829373914033916,
    :distance 8.0,
    :movement :up,
    :speed 5.0,
    :time 0.0}}
  {:name :text-screen,
   :answers
   {:direction -3.1167015298854923,
    :protocol :none,
    :text "EXIT",
    :parameter "message",
    :text-color {:red 127, :green 255, :blue 0},
    :z 27,
    :x 27,
    :success-text "",
    :font-size 2.0,
    :transform "(function [x] x)",
    :end-level? false,
    :success? "",
    :error-text "",
    :docstring "",
    :distance 40,
    :id "",
    :target-ids []}}]}
